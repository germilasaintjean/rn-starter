{"ast":null,"code":"var _jsxFileName = \"/home/sgermila/Documents/Udemy-React-Native/rn-starter/src/screens/SquareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorCounter from \"../components/ColorCounter\";\nvar COLOR_INCREMENT = 15;\n\nvar reducer = (state, action) => {\n  switch (action.type) {\n    case 'change_red':\n      return state.red + action.payload > 255 || state.red + action.payload < 0 ? state : _objectSpread({}, state, {\n        red: state.red + action.payload\n      });\n\n    case 'change_green':\n      return state.green + action.payload > 255 || state.green + action.payload < 0 ? state : _objectSpread({}, state, {\n        green: state.green + action.payload\n      });\n\n    case 'change_blue':\n      return state.blue + action.payload > 255 || state.blue + action.payload < 0 ? state : _objectSpread({}, state, {\n        blue: state.blue + action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar SquareScreen = () => {\n  var [state, dispatch] = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  });\n  var {\n    red,\n    green,\n    blue\n  } = state;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    }\n  }, React.createElement(ColorCounter, {\n    onIncrease: () => dispatch({\n      type: 'change_red',\n      payload: COLOR_INCREMENT\n    }),\n    onDecrease: () => dispatch({\n      type: 'change_red',\n      payload: -1 * COLOR_INCREMENT\n    }),\n    color: \"Red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: () => dispatch({\n      type: 'change_blue',\n      payload: COLOR_INCREMENT\n    }),\n    onDecrease: () => dispatch({\n      type: 'change_blue',\n      payload: -1 * COLOR_INCREMENT\n    }),\n    color: \"Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  }), React.createElement(ColorCounter, {\n    color: \"Green\",\n    onIncrease: () => dispatch({\n      type: 'change_green',\n      payload: COLOR_INCREMENT\n    }),\n    onDecrease: () => dispatch({\n      type: 'change_green',\n      payload: -1 * COLOR_INCREMENT\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 150,\n      width: 150,\n      backgroundColor: \"rgb(\".concat(red, \",\").concat(green, \",\").concat(blue, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({});\nexport default SquareScreen;","map":{"version":3,"sources":["/home/sgermila/Documents/Udemy-React-Native/rn-starter/src/screens/SquareScreen.js"],"names":["React","useReducer","ColorCounter","COLOR_INCREMENT","reducer","state","action","type","red","payload","green","blue","SquareScreen","dispatch","height","width","backgroundColor","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport ColorCounter from '../components/ColorCounter';\n\nconst COLOR_INCREMENT = 15;\n\nconst reducer = (state, action) => {\n  // state === { red: number, green: number, blue: number };\n  // action === { type: 'change_red' || 'change_green' || 'change_blue', payload: 15 || -15 }\n\n  switch (action.type) {\n    case 'change_red':\n      return state.red + action.payload > 255 || state.red + action.payload < 0\n        ? state\n        : { ...state, red: state.red + action.payload };\n    case 'change_green':\n      return state.green + action.payload > 255 ||\n        state.green + action.payload < 0\n        ? state\n        : { ...state, green: state.green + action.payload };\n    case 'change_blue':\n      return state.blue + action.payload > 255 ||\n        state.blue + action.payload < 0\n        ? state\n        : { ...state, blue: state.blue + action.payload };\n    default:\n      return state;\n  }\n};\n\nconst SquareScreen = () => {\n  const [state, dispatch] = useReducer(reducer, { red: 0, green: 0, blue: 0 });\n  const { red, green, blue } = state;\n\n  return (\n    <View>\n      <ColorCounter\n        onIncrease={() =>\n          dispatch({ type: 'change_red', payload: COLOR_INCREMENT })\n        }\n        onDecrease={() =>\n          dispatch({ type: 'change_red', payload: -1 * COLOR_INCREMENT })\n        }\n        color=\"Red\"\n      />\n      <ColorCounter\n        onIncrease={() =>\n          dispatch({ type: 'change_blue', payload: COLOR_INCREMENT })\n        }\n        onDecrease={() =>\n          dispatch({ type: 'change_blue', payload: -1 * COLOR_INCREMENT })\n        }\n        color=\"Blue\"\n      />\n      <ColorCounter\n        color=\"Green\"\n        onIncrease={() =>\n          dispatch({ type: 'change_green', payload: COLOR_INCREMENT })\n        }\n        onDecrease={() =>\n          dispatch({ type: 'change_green', payload: -1 * COLOR_INCREMENT })\n        }\n      />\n      <View\n        style={{\n          height: 150,\n          width: 150,\n          backgroundColor: `rgb(${red},${green},${blue})`\n        }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({});\n\nexport default SquareScreen;\n"]},"metadata":{},"sourceType":"module"}