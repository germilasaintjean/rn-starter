{"ast":null,"code":"var _jsxFileName = \"/home/sgermila/Documents/Udemy-React-Native/rn-starter/src/screens/ColorScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar ColorScreen = () => {\n  var [colors, setColors] = useState([]);\n  console.log(colors);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Add a Color\",\n    onPress: () => {\n      setColors([...colors, randomRgb()]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: item => item,\n    data: colors,\n    renderItem: (_ref) => {\n      var {\n        item\n      } = _ref;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    }\n  }));\n};\n\nvar randomRgb = () => {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\".concat(red, \", \").concat(green, \", \").concat(blue, \")\");\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["/home/sgermila/Documents/Udemy-React-Native/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","console","log","randomRgb","item","height","width","backgroundColor","red","Math","floor","random","green","blue","styles","StyleSheet","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,IAAMC,WAAW,GAAG,MAAM;AACxB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYI,SAAS,EAArB,CAAD,CAAT;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAEC,IAAI,IAAIA,IADxB;AAEE,IAAA,IAAI,EAAEL,MAFR;AAGE,IAAA,UAAU,EAAE,UAAc;AAAA,UAAb;AAAEK,QAAAA;AAAF,OAAa;AACxB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE,GAAtB;AAA2BC,UAAAA,eAAe,EAAEH;AAA5C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAoBD,CAxBD;;AA0BA,IAAMD,SAAS,GAAG,MAAM;AACtB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAEA,uBAAcH,GAAd,eAAsBI,KAAtB,eAAgCC,IAAhC;AACD,CAND;;AAQA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAelB,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Button, FlatList } from 'react-native';\n\nconst ColorScreen = () => {\n  const [colors, setColors] = useState([]);\n  console.log(colors);\n\n  return (\n    <View>\n      <Button\n        title=\"Add a Color\"\n        onPress={() => {\n          setColors([...colors, randomRgb()]);\n        }}\n      />\n\n      <FlatList\n        keyExtractor={item => item}\n        data={colors}\n        renderItem={({ item }) => {\n          return (\n            <View style={{ height: 100, width: 100, backgroundColor: item }} />\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nconst randomRgb = () => {\n  const red = Math.floor(Math.random() * 256);\n  const green = Math.floor(Math.random() * 256);\n  const blue = Math.floor(Math.random() * 256);\n\n  return `rgb(${red}, ${green}, ${blue})`;\n};\n\nconst styles = StyleSheet.create({});\n\nexport default ColorScreen;\n"]},"metadata":{},"sourceType":"module"}